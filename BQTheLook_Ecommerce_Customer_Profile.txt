--NUMBER OF USERS
SELECT 
FORMAT("%'d",COUNT(DISTINCT id)) as number_of_users
FROM bigquery-public-data.thelook_ecommerce.users

--USERS BY GENDER
SELECT 
gender
,FORMAT("%'d", COUNT(DISTINCT id)) as number_of_users
FROM bigquery-public-data.thelook_ecommerce.users
GROUP BY 1

--MIN, MAX, AVG AGE
SELECT
MAX(age) as max_age
, MIN(age) as min_age
, AVG(age) as ave_age
FROM bigquery-public-data.thelook_ecommerce.users

-- MODE AGE
SELECT 
age
, COUNT (DISTINCT (id)) as number_of_customers
FROM bigquery-public-data.thelook_ecommerce.users
GROUP BY 1 
ORDER BY 2 DESC
LIMIT 1

-- MEDIAN AGE
SELECT 
APPROX_QUANTILES(age,2)[OFFSET(1)] AS median_age 
FROM bigquery-public-data.thelook_ecommerce.users


WITH age_table AS 
(
SELECT 
DISTINCT id
, age
, CASE 
  WHEN age < 18 THEN 'Minor'
  WHEN age <= 30 THEN '19-30'
  WHEN age <= 40 THEN '31-40'
  WHEN age <= 50 THEN '41-50'
  WHEN age <= 60 THEN '51-60'
  ELSE 'Above 60'
  END AS age_range
FROM bigquery-public-data.thelook_ecommerce.users
)

SELECT 
age_range
, COUNT (DISTINCT id) as number_of_customers
FROM age_table
GROUP BY age_range
ORDER BY 1 ASC

--USERS BY COUNTRY 
SELECT 
country
, COUNT(DISTINCT id) as number_of_users
FROM bigquery-public-data.thelook_ecommerce.users
GROUP BY 1
ORDER BY 2 DESC

--BY TRAFFIC SOURCE
SELECT 
traffic_source
, COUNT(DISTINCT id) as number_of_users
FROM bigquery-public-data.thelook_ecommerce.users
GROUP BY 1
ORDER BY 2 DESC

-- NUmber of customers by month + year + cummulative
WITH customer_counts AS (
  SELECT
    EXTRACT(YEAR FROM created_at) AS year,
    EXTRACT(MONTH FROM created_at) AS month,
    COUNT(DISTINCT id) AS num_customers
  FROM
    bigquery-public-data.thelook_ecommerce.users
  GROUP BY
    year,
    month
  ORDER BY
    year,
    month
) , cumulative_column AS (
  SELECT
    customer_counts.year
    , customer_counts.month 
    , num_customers
    , SUM(num_customers) OVER (PARTITION BY year ORDER BY month) AS cumulative_monthly_total
    , SUM(num_customers) OVER (PARTITION BY year ORDER BY month ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_yearly_total
  FROM
   customer_counts
)
SELECT
  customer_counts.year,
  customer_counts.month,
  customer_counts.num_customers,
  cumulative_column.cumulative_monthly_total,
  cumulative_column.cumulative_yearly_total
FROM
  customer_counts
JOIN
  cumulative_column
ON
  customer_counts.year = cumulative_column.year
  AND customer_counts.month = cumulative_column.month
ORDER BY
  customer_counts.year,
  customer_counts.month
